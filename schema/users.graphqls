enum UserType {
  "User can have access to all data"
  ADMIN
  "User can access specific data but not all"
  PRO
  "User can only see their own data"
  USER
}

enum SexeType {
  MAN
  WOMAN
  OTHER
}

enum FormuleType {
  BASIC
  GOLD
  DIAMOND
}

enum GoalType {
  "User wants to gain weight"
  PRISE_DE_MASSE
  "User wants to lose weight"
  PERTE_DE_POIDS
  "User wants to maintain his weight"
  GARDER_LA_FORME
  "User wants to gain muscle"
  PRISE_DE_MUSCLE
  "User wants to have performance"
  PRISE_DE_FORCE
  "User wants to work on his endurance"
  CARDIO
}

"All fields that represent a user"
type User {
  id: UUID!
  created_at: Time!
  deleted_at: Time
  updated_at: Time!
  email: Email!
  firstname: String
  lastname: String
  role: [UserType!]!
  age: Int
  sexe: SexeType
  goals: [GoalType!]
  ideal_partner: String
  profile_picture: String
  city: String
  ask: Int!
  badge: Boolean!
  formule: FormuleType
}

"payload send when you a user want to update his profile"
input UpdateUserProfileInput {
  "id of the user (required)"
  id: UUID!
  "email of the user (required)"
  email: Email!
  "firstname of the user"
  firstname: String @binding(validation: "min=2,max=25,with_number=false")
  "lastname of the user"
  lastname: String @binding(validation: "min=2,max=25,with_number=false")
  "age of the user"
  age: Int @binding(validation: "min=1,max=120")
  "sexe of the user"
  sexe: SexeType
  "goals of the user"
  goals: [GoalType!] @binding(validation: "min=0,max=6")
  "description of his ideal partner"
  ideal_partner: String
  "url of the profile picture"
  profile_picture: String
  "city of the user"
  city: String
}